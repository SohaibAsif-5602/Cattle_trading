@inherits LayoutComponentBase
@inject IJSRuntime JSRuntime
<PageTitle>Maveshi Online Trading</PageTitle>
<style>
    /* Resetting CSS styles */
    * {
        margin: 0;
        padding: 0;
        box-sizing: border-box;
    }

    .sidebar .nav-item .nav-link {
        color: black;
    }

    body {
        font-family: Arial, sans-serif;
    }

    /* Your updated styles with specified colors */
    .header {
        display: flex;
        justify-content: center;
        align-items: center;
        background-color: #FFFFFF; /* Dark grey for the header */
        color: #000000; /* Set text color to white */
        padding: 7px;
    }

    .menu-icon {
        cursor: pointer;
        color: #000000;
    }

    .app-name {
        flex: 1;
        text-align: center;
    }

        .app-name h1 {
            margin: 0;
            font-weight: bold !important;
            padding-left: 60px;
        }

    .page {
        display: flex;
    }

    .sidebar {
        background-color: white;
        width: 180px;
        height: 40vh;
        position: fixed; /* Set position to fixed */
        top: 0;
        left: -250px; /* Start off-screen to the left */
        transition: left 0.3s ease; /* Add transition for smooth animation */
        padding: 10px;
    }

        /* Add a class to move the sidebar into view when the nav menu is toggled */
        .sidebar.active {
            left: 27px;
        }

    .content {
        flex: 1;
        padding: 10px;
        padding-top: 1rem;
    }

    /* Apply consistent styling to the navmenu */
    .nav-scrollable {
        background-color: black; /* Reddish color for the navmenu */
        color: black; /* Change text color to black */
        padding: 0;
    }

        /* Override link colors to white */
        
        /* Set the icon color inside the navmenu to white */
        .nav-scrollable .oi {
            color: white;
        }

    .app-urdu {
        text-align: center;
    }

    .nav-scrollable .nav-link {
        color: black;
    }
</style>

<div class="header">
    <div class="menu-icon" @onclick="ToggleNavMenu">
        <span class="oi oi-menu" aria-hidden="true"></span>
    </div>
    <div class="app-name">
        <h1>M A W E S H Iㅤمویشی</h1>
    </div>
    <div>
        <img src="./images/logo2.png" style="height: 55px;" />
    </div>
</div>

<div class="page">
    <div class="sidebar @NavMenuCssClass" @onclick="CloseNavMenu" id="sidebar">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="sell">
                <span class="oi oi-dollar" aria-hidden="true"></span> Sell <!-- Change oi- icon name -->
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="profile">
                <span class="oi oi-person" aria-hidden="true"></span> Profile
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="about">
                <span class="oi oi-info" aria-hidden="true"></span> About <!-- Change oi- icon name -->
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="chatbot" Match="NavLinkMatch.All">
                <span class="oi oi-question-mark" aria-hidden="true"></span> Help
            </NavLink>
        </div>
    </div>
    <main>
        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : "active"; // Use "active" class when not collapsed

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private void CloseNavMenu()
    {
        if (!collapseNavMenu)
        {
            collapseNavMenu = true;
        }
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("closeSidebarOnClickOutside");
        }
    }
}
